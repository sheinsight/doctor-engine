name: building-platform-binary

on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
      target:
        required: true
        type: string
      docker:
        required: false
        type: string
    
env:
  NAPI_DIR: bindings/doctor
  APP_NAME: doctor-binding

jobs:
  build:
    name: ${{ inputs.host }} - ${{ inputs.target }} - node@20
    runs-on: ${{ inputs.host }}
    
    # defaults:
    #   run:
    #     working-directory: ${{ env.NAPI_DIR }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10.11.0
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
        
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ inputs.target }}-cargo-${{ inputs.host }}
          
      - name: Install rust toolchain
        if: ${{ !inputs.docker }}
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ inputs.target }}
          override: true
          
      - name: Enable long paths on Windows
        if: contains(inputs.host, 'windows')
        shell: bash
        run: |
          git config --system core.longpaths true
        
      - name: Build binding in docker
        uses: addnab/docker-run-action@v3
        if: ${{ inputs.docker }}
        with:
          image: ${{ inputs.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: |
            set -e 
            rustup target add ${{ inputs.target }}
            cd ./bindings/doctor
            npm run build -- --target ${{ inputs.target }}
            
            
      - name: Build binding
        if: ${{ !inputs.docker }}
        shell: bash
        run: |
          # npm run build -- --target ${{ inputs.target }}
          pnpm --filter @shined/doctor-binding build -- --target ${{ inputs.target }}

      - name: Build npm
        shell: bash
        run: |
          pnpm --filter @shined/doctor build
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: doctor-binding-${{ inputs.target }}
          path: ${{ env.NAPI_DIR }}/${{ env.APP_NAME }}.*.node
          if-no-files-found: error 

      - name: Upload Js
        uses: actions/upload-artifact@v4
        with:
          name: js
          path: |
            ${{ env.NAPI_DIR }}/index.js
            ${{ env.NAPI_DIR }}/index.d.ts
          if-no-files-found: error 
          overwrite: true
