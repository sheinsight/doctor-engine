name: shined-doctor-engine-debug-ubuntu
env:
  DEBUG: napi:*
  APP_NAME: doctor
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  CARGO_INCREMENTAL: '1'
  NAPI_DIR: napi/doctor_engine
  CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG: true
permissions:
  contents: write
  id-token: write
on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          # linux x86_64
          - host: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-20.04
            target: x86_64-unknown-linux-musl
          
          - host: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-22.04
            target: x86_64-unknown-linux-musl

          - host: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-musl
    
    name: ${{ matrix.settings.host }} - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}

    defaults:
      run:
        working-directory: ${{ env.NAPI_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ env.NAPI_DIR }}/package-lock.json
  
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.settings.target }}
          override: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock', 'justfile') }}

      - name: Install dependencies
        run: npm install

      - name: Build
        run: |
          if [[ "${{ matrix.settings.target }}" == *"gnu"* ]]; then
            # GNU 构建，设置 RUSTFLAGS 确保 GLIBC 2.31 兼容性
            export RUSTFLAGS="-C target-feature=-crt-static -C link-args=-Wl,--hash-style=both"
          else
            # MUSL 构建，使用静态链接
            export RUSTFLAGS="-C target-feature=+crt-static"
          fi
          
          # 设置链接器环境变量
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=gcc
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=musl-gcc
          npm run build -- --target ${{ matrix.settings.target }}
        shell: bash
      
      