name: shined-doctor-engine-release
env:
  DEBUG: napi:*
  # 如果没有的话 napi prepublish 会报错
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # MACOSX_DEPLOYMENT_TARGET: '10.13'
  # CARGO_INCREMENTAL: '1'
  NAPI_DIR: bindings/doctor-binding
  CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG: true
permissions:
  contents: write
  id-token: write

on:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-platforms:
    strategy:
      fail-fast: true
      matrix:
        platform:
          # Linux 平台
          - host: ubuntu-latest 
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine-zig
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine-zig
          # macOS 平台
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
          # Windows 平台
          - host: windows-latest
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
    
    name: Build ${{ matrix.platform.target }}
    uses: ./.github/workflows/napi-build-bin.yml
    with:
      host: ${{ matrix.platform.host }}
      target: ${{ matrix.platform.target }}
      docker: ${{ matrix.platform.docker }}
      binding_dir: bindings/doctor-binding
      binding_name: doctor-binding

  napi-publish:
    needs: [build-platforms]
    uses: ./.github/workflows/napi-publish.yml
    with:
      binding_dir: bindings/doctor-binding
      npm_package_name: '@shined/doctor-binding'
      release_name: 'doctor-binding ${{ github.ref_name }}'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  npm-publish:
    needs: [napi-publish]
    uses: ./.github/workflows/npm-publish.yml
    with:
      binding_dir: bindings/doctor-binding
      npm_package_name: '@shined/doctor'
      release_name: 'doctor ${{ github.ref_name }}'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # publish:
  #   needs: [build-platforms]
  #   runs-on: ubuntu-latest
  #   steps:

  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: ${{ env.NAPI_DIR }}/artifacts
  #         merge-multiple: true

  #     - name: Show artifacts
  #       shell: bash
  #       run: |
  #         cd ${{ env.NAPI_DIR }}
  #         ls -R ./artifacts

  #     - name: Download Js
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: js
  #         path: ${{ env.NAPI_DIR }}
  #         merge-multiple: true

  #     - uses: pnpm/action-setup@v4
  #       with:
  #         version: 10.11.0
  #         run_install: false

  #     - name: Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: .node-version
  #         cache: pnpm
  #         cache-dependency-path: '**/pnpm-lock.yaml'
 
  #     - name: List packages
  #       shell: bash
  #       run: |
  #         cd ${{ env.NAPI_DIR }}
  #         ls -l
  #         ls -R ./artifacts
  #         pnpm install --frozen-lockfile --strict-peer-dependencies
  #         pnpm run create-npm-dirs
  #         pnpm run artifacts
  #         ls -R ./artifacts
  #         ls -R ./npm
  #         ls -l
        
  #     - name: Build npm
  #       shell: bash
  #       run: |
  #         pnpm --filter @shined/doctor build

  #     - name: Create Draft Release
  #       id: create_release
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         draft: true
  #         prerelease: false

  #     - name: Publish
  #       if: startsWith(github.ref, 'refs/tags/')
  #       run: |
  #         echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
  #         ## napi 生成的 binding 文件，napi 自己会发布
  #         pnpm -r --filter="!*-darwin-*" --filter="!*-linux-*" --filter="!*-win32-*" publish --no-git-checks
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #         RELEASE_ID: ${{ steps.create_release.outputs.id }}

  #     - name: Update Release
  #       if: startsWith(github.ref, 'refs/tags/')
  #       run: | 
  #         echo "Updating release..."
  #         gh release edit ${{ github.ref_name }} --draft=false --latest

