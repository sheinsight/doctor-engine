name: NAPI Build 

on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
      target:
        required: true
        type: string 


jobs:
  build:
    name: ${{ inputs.host }} - ${{ inputs.target }} - node@20
    runs-on: ${{ inputs.host }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ inputs.target }}-cargo-${{ inputs.host }}
          
      - name: Install rust toolchain
        if: ${{ !inputs.docker }}
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ inputs.target }}
          override: true
          
      - name: Enable long paths on Windows
        if: contains(inputs.host, 'windows')
        shell: bash
        run: |
          git config --system core.longpaths true
        
      # - name: Cargo test in docker
      #   uses: addnab/docker-run-action@v3
      #   if: ${{ inputs.docker }}
      #   with:
      #     image: ${{ inputs.docker }}
      #     # options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
      #     options: | 
      #       --user 0:0 
      #       -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db 
      #       -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache 
      #       -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index 
      #       -v ${{ github.workspace }}:/build 
      #       -w /build
      #     run: |
      #       set -e 
      #       rustup target add ${{ inputs.target }}
      #       cargo test --target ${{ inputs.target }}
      - name: Cargo test
        shell: bash
        run: |
          cargo test --target ${{ inputs.target }}
             
 
 
