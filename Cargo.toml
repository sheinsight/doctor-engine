[workspace]
members = [
  "crates/doctor",
  "crates/ext",
  "crates/lint",
  "crates/node",
  "crates/npmrc",
  "crates/package_json",
  "crates/walk_parallel",
  "napi/doctor_engine",
]
resolver = "3"


[workspace.package]
authors      = ["ityuany <519495771@qq.com>"]
edition      = "2024"
homepage     = "https://github.com/sheinsight/doctor-engine"
license      = "MIT"
repository   = "https://github.com/sheinsight/doctor-engine"
rust-version = "1.85.0"

[workspace.dependencies]
bitflags   = "^2.9.0"
config     = "^0.14.0"
miette     = { version = "7.6.0", features = ["derive", "fancy"] }
rustc-hash = "^2.1.1"
serde      = "^1.0.219"
serde_ini  = "0.2.0"
serde_json = "^1.0.140"
thiserror  = "2.0.12"
tokio      = { version = "1.44.1", features = ["macros", "rt-multi-thread"] }


pathdiff = "0.2.3"
rayon    = "1.10.0"

#napi
napi        = { version = "3.0.0-alpha.33", features = ["tokio_rt"] }
napi-build  = "2.1.6"
napi-derive = "3.0.0-alpha.29"

lazy-regex = "3.4.1"
ropey      = "1.6.1"

typed-builder = "0.21.0"

# lint
oxc_allocator   = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_allocator" }
oxc_diagnostics = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_diagnostics" }
oxc_linter      = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_linter" }
oxc_parser      = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_parser" }
oxc_semantic    = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_semantic" }
oxc_span        = { git = "https://github.com/oxc-project/oxc.git", tag = "oxlint_v0.16.7", package = "oxc_span" }


# biome_json_parser = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_parser/v0.5.7", package = "biome_json_parser" }
# biome_json_syntax = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_json_syntax" }
# biome_rowan       = { git = "https://github.com/biomejs/biome.git", tag = "biome_rowan/v0.5.7", package = "biome_rowan" }

# biome_console       = "=0.5.7"
# biome_diagnostics   = "=0.5.7"
# biome_json_parser   = "=0.5.7"
# biome_json_syntax   = "=0.5.7"
# biome_parser        = "=0.5.7"
# biome_rowan         = "=0.5.7"
# biome_text_edit     = "=0.5.7"
# biome_unicode_table = "=0.5.7"


# glob
ignore              = "0.4.23"
package_json_parser = "0.0.6"

anyhow     = { version = "^1.0.98" }
env_logger = "0.11.8"
log        = "0.4.27"

node-semver  = "2.2.0"
strum        = "0.27.1"
strum_macros = "0.27.1"


doctor               = { path = "crates/doctor" }
doctor_ext           = { path = "crates/ext" }
doctor_lint          = { path = "crates/lint" }
doctor_node          = { path = "crates/node" }
doctor_npmrc         = { path = "crates/npmrc" }
doctor_package_json  = { path = "crates/package_json" }
doctor_walk_parallel = { path = "crates/walk_parallel" }


# biome
# biome_console            = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_console" }
# biome_deserialize        = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_deserialize" }
# biome_deserialize_macros = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_deserialize_macros" }
# biome_diagnostics        = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_diagnostics" }
# biome_formatter          = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_formatter" }
# biome_json_formatter     = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_json_formatter" }
# biome_json_parser        = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_json_parser" }
# biome_json_syntax        = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_json_syntax" }
# biome_parser             = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_parser" }
# biome_rowan              = { git = "https://github.com/biomejs/biome.git", tag = "biome_json_syntax/v0.5.7", package = "biome_rowan" }

# biome_deserialize = { version = "0.5.7", features = ["derive"] }
# biome_json_parser = { version = "0.5.7" }
# biome_json_syntax = { version = "0.5.7" }


# doctor               = { path = "crates/doctor" }
# doctor_engine        = { path = "napi/doctor_engine" }
# doctor_ext           = { path = "crates/ext" }
# doctor_lint          = { path = "crates/lint" }
# doctor_node          = { path = "crates/node" }
# doctor_npmrc         = { path = "crates/npmrc" }
# doctor_package_json  = { path = "crates/package_json" }
# doctor_walk_parallel = { path = "crates/walk_parallel" }


[profile.release]
# 发布构建优化
codegen-units = 1       # 单一代码生成单元，提高优化效果
debug         = false   # 禁用调试信息
lto           = true    # 启用链接时优化
opt-level     = 3       # 最高级别的优化
panic         = "abort" # panic 时直接终止，减少二进制大小
strip         = true    # 移除调试符号

[profile.dev]
# 开发构建优化
debug            = true # 保留调试信息
debug-assertions = true # 启用调试断言
incremental      = true # 启用增量编译
opt-level        = 1    # 轻度优化，在编译速度和运行速度之间平衡

[profile.test]
# 测试构建优化
codegen-units    = 16   # 更多的代码生成单元，加快编译
debug            = true # 保留调试信息
debug-assertions = true # 启用调试断言
incremental      = true # 启用增量编译
opt-level        = 1    # 轻度优化

[profile.bench]
# 基准测试构建优化
codegen-units    = 1     # 单一代码生成单元
debug            = false # 禁用调试信息
debug-assertions = false # 禁用调试断言
lto              = true  # 启用链接时优化
opt-level        = 3     # 最高级别优化
