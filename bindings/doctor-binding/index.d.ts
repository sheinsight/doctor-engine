/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class JsSpecifications {
  static create(cwd: string, opts?: RawSpecificationsRenderOpts | undefined | null): JsSpecifications
  validateNpmrc(): Promise<Array<JsMessages>>
  validateNodeVersion(): Promise<Array<JsMessages>>
  validatePackageJson(): Promise<Array<JsMessages>>
  validateLint(): Promise<Array<JsMessages>>
  validateAll(): Promise<Array<JsMessages>>
}

export declare function cloc(paths: Array<string>, opts?: JsClocOpts | undefined | null): Array<JsLanguageStats>

export interface Diagnostic {
  fileName: string
  help: string
  url: string
  severity: string
  code: string
  message: string
  labels: Array<LabeledLoc>
}

export interface GlobJsArgs {
  ignore?: Array<string>
  cwd: string
  verbose?: boolean
  absolute?: boolean
  globals?: Record<string, string>
}

export declare function initializeLogger(level?: LogLevel | undefined | null): void

export interface JsClocOpts {
  ignore?: Array<string>
}

export interface JsDiagnostics {
  message: string
  code?: string
  severity?: JsSeverity
  help?: string
  url?: string
  labels?: Array<JsLabeledSpan>
}

export interface JsLabeledSpan {
  label?: string
  span: JsSourceSpan
  loc: JsSourceLocation
  primary: boolean
}

export interface JsLanguageStats {
  lang: JsLanguageType
  code: number
  comments: number
  blanks: number
}

export declare const enum JsLanguageType {
  ABNF = 'ABNF',
  Abap = 'Abap',
  ActionScript = 'ActionScript',
  Ada = 'Ada',
  Agda = 'Agda',
  Alex = 'Alex',
  Alloy = 'Alloy',
  Arduino = 'Arduino',
  AsciiDoc = 'AsciiDoc',
  Asn1 = 'Asn1',
  Asp = 'Asp',
  AspNet = 'AspNet',
  Assembly = 'Assembly',
  AssemblyGAS = 'AssemblyGAS',
  AutoHotKey = 'AutoHotKey',
  Autoconf = 'Autoconf',
  Automake = 'Automake',
  Bash = 'Bash',
  Batch = 'Batch',
  Bean = 'Bean',
  BrightScript = 'BrightScript',
  C = 'C',
  CHeader = 'CHeader',
  CMake = 'CMake',
  CSharp = 'CSharp',
  CShell = 'CShell',
  Cabal = 'Cabal',
  Cassius = 'Cassius',
  Ceylon = 'Ceylon',
  Clojure = 'Clojure',
  ClojureC = 'ClojureC',
  ClojureScript = 'ClojureScript',
  Cobol = 'Cobol',
  CodeQL = 'CodeQL',
  CoffeeScript = 'CoffeeScript',
  Cogent = 'Cogent',
  ColdFusion = 'ColdFusion',
  ColdFusionScript = 'ColdFusionScript',
  Coq = 'Coq',
  Cpp = 'Cpp',
  CppHeader = 'CppHeader',
  Crystal = 'Crystal',
  Css = 'Css',
  D = 'D',
  Daml = 'Daml',
  Dart = 'Dart',
  DeviceTree = 'DeviceTree',
  Dhall = 'Dhall',
  Dockerfile = 'Dockerfile',
  DotNetResource = 'DotNetResource',
  DreamMaker = 'DreamMaker',
  Dust = 'Dust',
  Edn = 'Edn',
  Elisp = 'Elisp',
  Elixir = 'Elixir',
  Elm = 'Elm',
  Elvish = 'Elvish',
  EmacsDevEnv = 'EmacsDevEnv',
  Emojicode = 'Emojicode',
  Erlang = 'Erlang',
  FEN = 'FEN',
  FSharp = 'FSharp',
  Fish = 'Fish',
  FlatBuffers = 'FlatBuffers',
  Forth = 'Forth',
  FortranLegacy = 'FortranLegacy',
  FortranModern = 'FortranModern',
  FreeMarker = 'FreeMarker',
  Fstar = 'Fstar',
  Futhark = 'Futhark',
  GDB = 'GDB',
  GdScript = 'GdScript',
  Gherkin = 'Gherkin',
  Gleam = 'Gleam',
  Glsl = 'Glsl',
  Go = 'Go',
  Gohtml = 'Gohtml',
  Graphql = 'Graphql',
  Groovy = 'Groovy',
  Gwion = 'Gwion',
  Hamlet = 'Hamlet',
  Handlebars = 'Handlebars',
  Happy = 'Happy',
  Haskell = 'Haskell',
  Haxe = 'Haxe',
  Hcl = 'Hcl',
  Headache = 'Headache',
  Hex = 'Hex',
  Hlsl = 'Hlsl',
  HolyC = 'HolyC',
  Html = 'Html',
  Idris = 'Idris',
  Ini = 'Ini',
  IntelHex = 'IntelHex',
  Isabelle = 'Isabelle',
  Jai = 'Jai',
  Java = 'Java',
  JavaScript = 'JavaScript',
  Json = 'Json',
  Jsonnet = 'Jsonnet',
  Jsx = 'Jsx',
  Julia = 'Julia',
  Julius = 'Julius',
  Jupyter = 'Jupyter',
  K = 'K',
  KakouneScript = 'KakouneScript',
  Kotlin = 'Kotlin',
  LLVM = 'LLVM',
  Lean = 'Lean',
  Less = 'Less',
  LinkerScript = 'LinkerScript',
  Liquid = 'Liquid',
  Lisp = 'Lisp',
  LiveScript = 'LiveScript',
  Logtalk = 'Logtalk',
  Lua = 'Lua',
  Lucius = 'Lucius',
  Madlang = 'Madlang',
  Makefile = 'Makefile',
  Markdown = 'Markdown',
  Meson = 'Meson',
  Mint = 'Mint',
  ModuleDef = 'ModuleDef',
  MoonScript = 'MoonScript',
  MsBuild = 'MsBuild',
  Mustache = 'Mustache',
  Nim = 'Nim',
  Nix = 'Nix',
  NotQuitePerl = 'NotQuitePerl',
  OCaml = 'OCaml',
  ObjectiveC = 'ObjectiveC',
  ObjectiveCpp = 'ObjectiveCpp',
  Odin = 'Odin',
  OpenType = 'OpenType',
  Org = 'Org',
  Oz = 'Oz',
  PSL = 'PSL',
  Pan = 'Pan',
  Pascal = 'Pascal',
  Perl = 'Perl',
  Perl6 = 'Perl6',
  Pest = 'Pest',
  Php = 'Php',
  Polly = 'Polly',
  Pony = 'Pony',
  PostCss = 'PostCss',
  PowerShell = 'PowerShell',
  Processing = 'Processing',
  Prolog = 'Prolog',
  Protobuf = 'Protobuf',
  Pug = 'Pug',
  PureScript = 'PureScript',
  Python = 'Python',
  Q = 'Q',
  Qcl = 'Qcl',
  Qml = 'Qml',
  R = 'R',
  RON = 'RON',
  RPMSpecfile = 'RPMSpecfile',
  Racket = 'Racket',
  Rakefile = 'Rakefile',
  Razor = 'Razor',
  ReStructuredText = 'ReStructuredText',
  Renpy = 'Renpy',
  Ruby = 'Ruby',
  RubyHtml = 'RubyHtml',
  Rust = 'Rust',
  SRecode = 'SRecode',
  Sass = 'Sass',
  Scala = 'Scala',
  Scheme = 'Scheme',
  Scons = 'Scons',
  Sh = 'Sh',
  Sml = 'Sml',
  Solidity = 'Solidity',
  SpecmanE = 'SpecmanE',
  Spice = 'Spice',
  Sql = 'Sql',
  Stan = 'Stan',
  Stratego = 'Stratego',
  Stylus = 'Stylus',
  Svelte = 'Svelte',
  Svg = 'Svg',
  Swift = 'Swift',
  Swig = 'Swig',
  SystemVerilog = 'SystemVerilog',
  Tcl = 'Tcl',
  Tera = 'Tera',
  Tex = 'Tex',
  Text = 'Text',
  Thrift = 'Thrift',
  Toml = 'Toml',
  Tsx = 'Tsx',
  Ttcn = 'Ttcn',
  Twig = 'Twig',
  TypeScript = 'TypeScript',
  UnrealDeveloperMarkdown = 'UnrealDeveloperMarkdown',
  UnrealPlugin = 'UnrealPlugin',
  UnrealProject = 'UnrealProject',
  UnrealScript = 'UnrealScript',
  UnrealShader = 'UnrealShader',
  UnrealShaderHeader = 'UnrealShaderHeader',
  UrWeb = 'UrWeb',
  UrWebProject = 'UrWebProject',
  VB6 = 'VB6',
  VBScript = 'VBScript',
  Vala = 'Vala',
  Velocity = 'Velocity',
  Verilog = 'Verilog',
  VerilogArgsFile = 'VerilogArgsFile',
  Vhdl = 'Vhdl',
  VimScript = 'VimScript',
  VisualBasic = 'VisualBasic',
  VisualStudioProject = 'VisualStudioProject',
  VisualStudioSolution = 'VisualStudioSolution',
  Vue = 'Vue',
  WebAssembly = 'WebAssembly',
  Wolfram = 'Wolfram',
  XSL = 'XSL',
  Xaml = 'Xaml',
  XcodeConfig = 'XcodeConfig',
  Xml = 'Xml',
  Xtend = 'Xtend',
  Yaml = 'Yaml',
  Zig = 'Zig',
  Zsh = 'Zsh'
}

export interface JsMessages {
  sourcePath: string
  diagnostics: Array<JsDiagnostics>
}

export declare const enum JsSeverity {
  Error = 'Error',
  Warning = 'Warning',
  Advice = 'Advice'
}

export interface JsSourceLocation {
  start: JsSourcePosition
  end: JsSourcePosition
}

export interface JsSourcePosition {
  row: number
  col: number
}

export interface JsSourceSpan {
  offset: number
  length: number
}

export interface LabeledLoc {
  span: Span
  loc: Location
}

export interface Location {
  start: Position
  end: Position
}

export declare const enum LogLevel {
  Error = 0,
  Warn = 1,
  Info = 2,
  Debug = 3,
  Trace = 4
}

export declare const enum NaPiCategory {
  V20250601Inner = 0
}

export interface Position {
  line: number
  col: number
}

export interface RawSpecificationsRenderOpts {
  withDashboard?: boolean
  maxRenderCount?: number
  quiet?: boolean
}

export interface Response {
  rc: string
  map: Record<string, number>
}

export interface Span {
  offset: number
  length: number
}

export declare function unSafeInnerDebugLint(oxlintConfig: string, globJsArgs: GlobJsArgs): Promise<Array<Diagnostic>>

export declare function unSafeInnerLint(globJsArgs: GlobJsArgs, category: NaPiCategory): Promise<Array<Diagnostic>>
